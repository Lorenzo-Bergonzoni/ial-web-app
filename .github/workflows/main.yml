name: Deploy Static Website

# QUANDO SI ATTIVA LA PIPELINE
on:
  # Si attiva ad ogni push sul branch main
  push:
    branches: [ main ]
  # Si attiva anche quando si crea una Pull Request verso main
  pull_request:
    branches: [ main ]

# PERMESSI NECESSARI
permissions:
  contents: read
  pages: write
  id-token: write

# I LAVORI (JOBS) DELLA PIPELINE
jobs:
  # JOB 1: Build e test del sito
  build:
    # Esegui su Ubuntu
    runs-on: ubuntu-latest
    
    # PASSI DEL JOB
    steps:
    # Step 1: Checkout del codice
    - name: Checkout codice
      uses: actions/checkout@v4
      # Questo scarica il tuo codice dalla repository
    
    # Step 2: Setup Node.js (utile per eventuali tool)
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    # Step 3: Controllo sintassi HTML (opzionale ma utile)
    - name: Controllo sintassi HTML
      run: |
        # Controlla che index.html esista
        if [ ! -f "index.html" ]; then
          echo "❌ ERRORE: File index.html non trovato!"
          exit 1
        fi
        
        # Controllo base del file HTML
        if ! grep -q "<html" index.html; then
          echo "⚠️  AVVISO: Tag <html> non trovato in index.html"
        fi
        
        echo "✅ Controllo HTML completato"
    
    # Step 4: Controllo esistenza file CSS e JS
    - name: Controllo file statici
      run: |
        # Controlla file CSS
        if [ ! -f "style.css" ] && [ ! -f "styles.css" ] && [ ! -f "css/style.css" ]; then
          echo "⚠️  AVVISO: Nessun file CSS trovato"
        else
          echo "✅ File CSS trovato"
        fi
        
        # Controlla file JS
        if [ ! -f "script.js" ] && [ ! -f "scripts.js" ] && [ ! -f "js/script.js" ]; then
          echo "⚠️  AVVISO: Nessun file JavaScript trovato"
        else
          echo "✅ File JavaScript trovato"
        fi
    
    # Step 5: Test di base (puoi personalizzare questo step)
    - name: Esegui test basici
      run: |
        # Controlla che i file non siano vuoti
        if [ -f "index.html" ] && [ ! -s "index.html" ]; then
          echo "❌ ERRORE: index.html è vuoto!"
          exit 1
        fi
        
        echo "✅ Tutti i test passati!"

  # JOB 2: Deploy su GitHub Pages (opzionale)
  deploy:
    # Dipende dal job build
    needs: build
    
    # Esegui su Ubuntu
    runs-on: ubuntu-latest
    
    # Ambiente (per GitHub Pages)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    # Step 1: Checkout del codice
    - name: Checkout codice
      uses: actions/checkout@v4
    
    # Step 2: Setup GitHub Pages
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    # Step 3: Upload artifact per il deploy
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'  # Usa la cartella corrente (dove sono i tuoi file)
    
    # Step 4: Deploy su GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
